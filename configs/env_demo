# [HOST]
# 宿主机项目目录
HOST_PROJECT_DIR=/data/py_framework
# 宿主机项目日志文件目录
HOST_LOG_DIR=/var/log/py_framework
# docker仓库地址
HOST_DOCKER_REPOSITORY=
# 宿主机web端口
HOST_WEB_PORT=8000
# 宿主机nginx配置目录
HOST_NGINX_DIR=/etc/py_framework/nginx
# 宿主机nginx http端口
HOST_NGINX_HTTP_PORT=80
# 宿主机nginx https端口
HOST_NGINX_HTTPS_PORT=443

# [COMPOSE]
# 避免多个项目网络配置冲突
COMPOSE_PROJECT_NAME=py_framework
# 镜像名字
COMPOSE_IMAGE_NAME=py_framework
# 容器内的项目目录
COMPOSE_PROJECT_DIR=/projects/py_framework
# 容器内的日志目录
COMPOSE_LOG_DIR=/var/log/py_framework

# [redis]
# 项目使用的redis key的前缀 example: pf -> pf:redis_key
redis_prefix=pf
redis_host=127.0.0.1
redis_port=6379
# redis模式 1: cluster(集群) 2: ""(单机)
redis_mode=
# redis db num集群模式则忽略
redis_db=0
# redis服务的密码
redis_password=

# [mysql]
# 项目创建表的前缀 example: pf -> pf_table_name
mysql_prefix=pf
mysql_host=127.0.0.1
mysql_port=3306
mysql_user=root
mysql_password=123456
mysql_db=test_db
mysql_charset=utf8mb4
# mysql连接池的最大连接数
mysql_pool_size=30

# [rabbitmq]
rabbitmq_host=127.0.0.1
rabbitmq_port=5672
rabbitmq_username=test
rabbitmq_password=123456
rabbitmq_vhost=
rabbitmq_heartbeat=10

# [log]
# 日志等级
log_level=INFO

# [srv]
# http请求的超时时间
srv_timeout=20
